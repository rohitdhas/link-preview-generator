import Head from "next/head";
import Navbar from "../components/navbar";
import { InputText } from "primereact/inputtext";
import { Button } from "primereact/button";
import { Toast } from "primereact/toast";
import Tabs from "../components/tabs";
import { useState, useRef } from "react";

import "primereact/resources/themes/lara-light-indigo/theme.css";
import "primereact/resources/primereact.min.css";
import "primeicons/primeicons.css";

const exampleRes = {
  url: "https://github.com/",
  title: "GitHub: Where the world builds software",
  siteName: "GitHub",
  description:
    "GitHub is where over 83 million developers shape the future of software, together. Contribute to the open source community, manage your Git repositories, review code like a pro, track bugs and features, power your CI/CD and DevOps workflows, and secure code before you commit it.",
  mediaType: "object",
  contentType: "text/html",
  images: [
    "https://github.githubassets.com/images/modules/site/social-cards/github-social.png",
  ],
  videos: [],
  favicons: ["https://github.githubassets.com/favicons/favicon.svg"],
};

export default function Home() {
  const [url, setURL] = useState("");
  const [data, setData] = useState();
  const [isLoading, setIsLoading] = useState(false);
  const toastRef = useRef();

  const submit = async () => {
    if (!url) {
      toastRef.current.show({
        severity: "info",
        summary: "Please provide URL",
      });
      return;
    }
    setIsLoading(true);
    try {
      const res = await fetch(`/api/getPreview?url=${url}`);
      const data = await res.json();
      setIsLoading(false);

      if (data.error) {
        toastRef.current.show({
          severity: "error",
          summary: "Invalid URL",
          detail: "Please enter a valid URL!",
        });
      } else {
        setData(data);
      }
    } catch (err) {
      setIsLoading(false);
      toastRef.current.show({
        severity: "error",
        summary: "Error Message",
        detail: "Preview not available!",
      });
      console.log(err);
    }
  };

  return (
    <div>
      <Head>
        <title>Link Preview Generator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <body>
        <Navbar />
        <Toast ref={toastRef} />
        <div
          id="top"
          className="mt-[5rem] h-auto py-[5rem] bg-[rgb(236,238,248)]"
        >
          <h1 className="text-3xl lg:text-5xl text-slate-800 font-bold text-center !leading-[1.3]">
            Link 🔗 Preview <br /> Generator ⚡
          </h1>
          <div className="flex flex-col lg:flex-row justify-center align items-center my-8 bg-white p-4 rounded-md w-min mx-auto shadow-md">
            <InputText
              value={url}
              onChange={(e) => setURL(e.target.value)}
              placeholder="Enter URL"
              className="w-auto lg:w-[350px] !mx-5 !my-4 lg:my-0"
            />
            <Button
              loading={isLoading}
              onClick={submit}
              label={`${isLoading ? "Generating ⌛" : "Submit"}`}
              icon="pi pi-check"
              className={`${isLoading ? "w-[200px]" : ""}`}
            />
          </div>
          <p className="text-center font-bold text-slate-500">
            Link preview will appear here 👇🏻
          </p>
          {data ? <Tabs data={data} /> : <></>}
        </div>
        <div className="my-8 p-8 bg-white flex flex-col align items-center">
          <h3
            id="api"
            className="text-3xl font-bold text-slate-900 text-center border-b-2 border-slate-400 w-[300px] mx-auto pb-4"
          >
            API Example 🌐
          </h3>
          <div className="my-6 w-[90%] md:w-[50%] overflow-hidden">
            <h5 className="text-xl font-bold text-slate-800">
              API Request (GET) 🌠:
            </h5>
            <code className="bg-slate-100 py-6 px-4 rounded-md block my-4 text-sm font-bold text-slate-600">
              https://link-preview-generator.vercel.app/api/getPreview?url=https://github.com
            </code>
          </div>
          <div className="my-6 w-[90%] md:w-[50%] overflow-hidden">
            <h5 className="text-xl font-bold text-slate-800">
              API Response (JSON) 🎈:
            </h5>
            <code className="bg-slate-100 leading-relaxed py-6 px-4 rounded-md block my-4 text-sm font-bold text-slate-600">
              {JSON.stringify(exampleRes, null, 4)}
            </code>
          </div>
        </div>
      </body>
      <footer className="bg-[rgb(236,238,248)] w-full text-center p-6 font-bold text-[#6366F1]">
        <p>
          Built 👨‍💻 with Next JS and Tailwind CSS 🎨 <br /> by{" "}
          <a
            href="https://www.linkedin.com/in/rohit-dhas-26b68215a/"
            target="_blank"
            rel="noreferrer"
            className="underline hover:text-[#4749dd] hover:no-underline"
          >
            Rohit Dhas
          </a>
        </p>
      </footer>
    </div>
  );
}
